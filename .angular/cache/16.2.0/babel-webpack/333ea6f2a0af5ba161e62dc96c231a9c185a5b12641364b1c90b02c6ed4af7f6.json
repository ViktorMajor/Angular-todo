{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.tasks = [];\n    this.nextId = 1;\n  }\n  addTask(taskName, priority, completed) {\n    this.tasks.push({\n      id: this.nextId,\n      name: taskName,\n      priority: priority,\n      completed: false\n    });\n    this.nextId++;\n    console.log(this.tasks);\n  }\n  deleteTask(taskId) {\n    const index = this.tasks.findIndex(task => task.id === taskId);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n    }\n  }\n  completion(task) {\n    const foundTask = this.tasks.find(t => t.id === task.id);\n    if (foundTask) {\n      foundTask.completed = true;\n    }\n  }\n  again(task) {\n    const foundTask = this.tasks.find(t => t.id === task.id);\n    if (foundTask) {\n      foundTask.completed = false;\n    }\n  }\n  getUncompletedTasks() {\n    return this.tasks.filter(task => task.completed === false);\n  }\n  getCompletedTasks() {\n    return this.tasks.filter(task => task.completed === true);\n  }\n}\n_class = TaskService;\n_class.ɵfac = function TaskService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskService","constructor","tasks","nextId","addTask","taskName","priority","completed","push","id","name","console","log","deleteTask","taskId","index","findIndex","task","splice","completion","foundTask","find","t","again","getUncompletedTasks","filter","getCompletedTasks","factory","ɵfac","providedIn"],"sources":["/Users/adminisztrator/Repo/Angular/Angular-todo/src/app/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private tasks: {\n    id: number;\n    name: string;\n    priority: string;\n    completed: boolean;\n  }[] = [];\n  private nextId: number = 1;\n\n  addTask(taskName: string, priority: string, completed: string) {\n    this.tasks.push({\n      id: this.nextId,\n      name: taskName,\n      priority: priority,\n      completed: false,\n    });\n    this.nextId++;\n    console.log(this.tasks);\n  }\n\n  deleteTask(taskId: number) {\n    const index = this.tasks.findIndex((task) => task.id === taskId);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n    }\n  }\n\n  completion(task: any) {\n    const foundTask = this.tasks.find((t) => t.id === task.id);\n    if (foundTask) {\n      foundTask.completed = true;\n    }\n  }\n  \n  again(task: any) {\n    const foundTask = this.tasks.find((t) => t.id === task.id);\n    if (foundTask) {\n      foundTask.completed = false;\n    }\n  }\n  \n\n  getUncompletedTasks() {\n    return this.tasks.filter((task) => task.completed === false);\n  }\n\n  \n\n  getCompletedTasks() {\n    return this.tasks.filter((task) => task.completed === true);\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIU,KAAAC,KAAK,GAKP,EAAE;IACA,KAAAC,MAAM,GAAW,CAAC;;EAE1BC,OAAOA,CAACC,QAAgB,EAAEC,QAAgB,EAAEC,SAAiB;IAC3D,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC;MACdC,EAAE,EAAE,IAAI,CAACN,MAAM;MACfO,IAAI,EAAEL,QAAQ;MACdC,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAE;KACZ,CAAC;IACF,IAAI,CAACJ,MAAM,EAAE;IACbQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,KAAK,CAAC;EACzB;EAEAW,UAAUA,CAACC,MAAc;IACvB,MAAMC,KAAK,GAAG,IAAI,CAACb,KAAK,CAACc,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKK,MAAM,CAAC;IAChE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACb,KAAK,CAACgB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAE/B;EAEAI,UAAUA,CAACF,IAAS;IAClB,MAAMG,SAAS,GAAG,IAAI,CAAClB,KAAK,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,EAAE,KAAKQ,IAAI,CAACR,EAAE,CAAC;IAC1D,IAAIW,SAAS,EAAE;MACbA,SAAS,CAACb,SAAS,GAAG,IAAI;;EAE9B;EAEAgB,KAAKA,CAACN,IAAS;IACb,MAAMG,SAAS,GAAG,IAAI,CAAClB,KAAK,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,EAAE,KAAKQ,IAAI,CAACR,EAAE,CAAC;IAC1D,IAAIW,SAAS,EAAE;MACbA,SAAS,CAACb,SAAS,GAAG,KAAK;;EAE/B;EAGAiB,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACtB,KAAK,CAACuB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACV,SAAS,KAAK,KAAK,CAAC;EAC9D;EAIAmB,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACxB,KAAK,CAACuB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACV,SAAS,KAAK,IAAI,CAAC;EAC7D;;SAlDWP,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAA2B,OAAA,EAAX3B,MAAW,CAAA4B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}